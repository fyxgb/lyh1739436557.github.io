{"queryPath":"/index.js","absPath":"/Users/luoyingheng/lyh-test/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n//var Chart = require('XXX');\nvar m = require('./templete/menu.js');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n\n    this.container.html(m.m1(data));\n    \n\n    this.container.find(\".second_f\").hide();\n    this.container.find(\".third_f\").hide();\n    this.container.find(\".fourth_f\").hide();\n    this.container.find(\".line\").show();\n    //一级点击,二级展开和收起\n    this.container.find(\".first_f\").on('click', (ev) => {\n      var e = ev || event;\n\n      this.container.find(\".second_f\").hide(300);\n      this.container.find(\".third_f\").hide();\n      this.container.find(\".fourth_f\").hide();\n      this.container.find(\".line\").show();\n\n      var val = $(e.currentTarget.parentElement).attr(\"value\");\n      if(val==0){\n        $(e.currentTarget.parentElement).children(\".second_f\").show(300); \n        this.container.find(\".menu_item\").attr(\"value\",0);\n        this.container.find(\".second_f_item\").attr(\"value\",0);\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n\n        // console.log(config);\n\n        this.container.find(\".first_f\").css(\"color\",this.config.color);\n\n        $(e.currentTarget.parentElement).attr(\"value\",1);\n        $(e.currentTarget).css(\"color\",\"rgba(8,182,253)\");\n      }else{\n        $(e.currentTarget.parentElement).children(\".second_f\").hide(300); \n        $(e.currentTarget.parentElement).attr(\"value\",0);\n        this.container.find(\".first_f\").css(\"color\",this.config.color);\n        $(\".second_f_item\").css(\"background\",\"none\");\n        $(\".third_f_item\").css(\"background\",\"rgba(255,255,255,.1)\");\n      }\n    });\n    //二级点击，三级展开\n    this.container.find(\".second_f_item\").on('click', (ev) => {\n      var e = ev || event;\n      var val = $(e.currentTarget).attr(\"value\");\n      if(val==0){\n        this.container.find(\".third_f\").hide();\n        this.container.find(\".fourth_f\").hide();\n        this.container.find(\".second_f_item\").attr(\"value\",0);\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n        $(e.currentTarget.lastChild).show(300);\n        $(e.currentTarget).attr(\"value\",1);\n\n        $(\".second_f_item\").css(\"background\",\"none\");\n        $(e.currentTarget).css(\"background\",\"rgba(8,182,253,.3)\");\n      }\n      \n      \n    }); \n    //三级点击，四级展开\n    this.container.find(\".third_f_item\").on('click', (ev) => {\n      var e = ev || event;\n      var val = $(e.currentTarget).attr(\"value\");\n      if(val==0){\n        this.container.find(\".fourth_f\").hide();\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n        $(e.currentTarget).children(\".fourth_f\").show(300);\n        $(e.currentTarget).attr(\"value\",1);\n\n        $(\".third_f_item\").css(\"background\",\"rgba(255,255,255,.1)\");\n        $(e.currentTarget).css(\"background\",\"rgba(8,182,253,.3)\");\n      }  \n    }); \n\n    this.container.find(\".sendBtn\").on('click', (ev) => {\n      var e = ev || event;\n      e.stopPropagation();\n      var key=$(e.currentTarget).attr(\"key\");\n      // var length1=$(e.currentTarget.parentElement).children(\".second_f\").length;\n\n      // var length2=$(e.currentTarget.parentElement).children(\".third_f\").length;\n \n      // var length3=$(e.currentTarget.parentElement).children(\".fourth_f\").length;\n\n      var data={\n        id:key\n      }\n      this.emit('sendId', data);\n      \n    })\n\n\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    // var cfg = this.config;\n    // cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n\n    //标题字体大小设置\n    this.container.find(\".font1\").css(\"font-size\",cfg.title.size1);\n    this.container.find(\".font2\").css(\"font-size\",cfg.title.size2);\n    this.container.find(\".font3\").css(\"font-size\",cfg.title.size3);\n    this.container.find(\".font4\").css(\"font-size\",cfg.title.size4);\n\n    //图标大小设置\n    this.container.find(\".img1\").css({'width':cfg.image.width1,'height':cfg.image.height1});\n    this.container.find(\".img2\").css({'width':cfg.image.width2,'height':cfg.image.height2});\n    this.container.find(\".img3\").css({'width':cfg.image.width3,'height':cfg.image.height3});\n    this.container.find(\".img4\").css({'width':cfg.image.width4,'height':cfg.image.height4});\n    //字体颜色设置\n    this.container.css({\n      // 'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n//var Chart = require('XXX');\nvar m = require('./templete/menu.js');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n\n    this.container.html(m.m1(data));\n    \n\n    this.container.find(\".second_f\").hide();\n    this.container.find(\".third_f\").hide();\n    this.container.find(\".fourth_f\").hide();\n    this.container.find(\".line\").show();\n    //一级点击,二级展开和收起\n    this.container.find(\".first_f\").on('click', (ev) => {\n      var e = ev || event;\n\n      this.container.find(\".second_f\").hide(300);\n      this.container.find(\".third_f\").hide();\n      this.container.find(\".fourth_f\").hide();\n      this.container.find(\".line\").show();\n\n      var val = $(e.currentTarget.parentElement).attr(\"value\");\n      if(val==0){\n        $(e.currentTarget.parentElement).children(\".second_f\").show(300); \n        this.container.find(\".menu_item\").attr(\"value\",0);\n        this.container.find(\".second_f_item\").attr(\"value\",0);\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n\n        // console.log(config);\n\n        this.container.find(\".first_f\").css(\"color\",this.config.color);\n\n        $(e.currentTarget.parentElement).attr(\"value\",1);\n        $(e.currentTarget).css(\"color\",\"rgba(8,182,253)\");\n      }else{\n        $(e.currentTarget.parentElement).children(\".second_f\").hide(300); \n        $(e.currentTarget.parentElement).attr(\"value\",0);\n        this.container.find(\".first_f\").css(\"color\",this.config.color);\n        $(\".second_f_item\").css(\"background\",\"none\");\n        $(\".third_f_item\").css(\"background\",\"rgba(255,255,255,.1)\");\n      }\n    });\n    //二级点击，三级展开\n    this.container.find(\".second_f_item\").on('click', (ev) => {\n      var e = ev || event;\n      var val = $(e.currentTarget).attr(\"value\");\n      if(val==0){\n        this.container.find(\".third_f\").hide();\n        this.container.find(\".fourth_f\").hide();\n        this.container.find(\".second_f_item\").attr(\"value\",0);\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n        $(e.currentTarget.lastChild).show(300);\n        $(e.currentTarget).attr(\"value\",1);\n\n        $(\".second_f_item\").css(\"background\",\"none\");\n        $(e.currentTarget).css(\"background\",\"rgba(8,182,253,.3)\");\n      }\n      \n      \n    }); \n    //三级点击，四级展开\n    this.container.find(\".third_f_item\").on('click', (ev) => {\n      var e = ev || event;\n      var val = $(e.currentTarget).attr(\"value\");\n      if(val==0){\n        this.container.find(\".fourth_f\").hide();\n        this.container.find(\".third_f_item\").attr(\"value\",0);\n        $(e.currentTarget).children(\".fourth_f\").show(300);\n        $(e.currentTarget).attr(\"value\",1);\n\n        $(\".third_f_item\").css(\"background\",\"rgba(255,255,255,.1)\");\n        $(e.currentTarget).css(\"background\",\"rgba(8,182,253,.3)\");\n      }  \n    }); \n\n    this.container.find(\".sendBtn\").on('click', (ev) => {\n      var e = ev || event;\n      e.stopPropagation();\n      var key=$(e.currentTarget).attr(\"key\");\n      // var length1=$(e.currentTarget.parentElement).children(\".second_f\").length;\n\n      // var length2=$(e.currentTarget.parentElement).children(\".third_f\").length;\n \n      // var length3=$(e.currentTarget.parentElement).children(\".fourth_f\").length;\n\n      var data={\n        id:key\n      }\n      this.emit('sendId', data);\n      \n    })\n\n\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    // var cfg = this.config;\n    // cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n\n    //标题字体大小设置\n    this.container.find(\".font1\").css(\"font-size\",cfg.title.size1);\n    this.container.find(\".font2\").css(\"font-size\",cfg.title.size2);\n    this.container.find(\".font3\").css(\"font-size\",cfg.title.size3);\n    this.container.find(\".font4\").css(\"font-size\",cfg.title.size4);\n\n    //图标大小设置\n    this.container.find(\".img1\").css({'width':cfg.image.width1,'height':cfg.image.height1});\n    this.container.find(\".img2\").css({'width':cfg.image.width2,'height':cfg.image.height2});\n    this.container.find(\".img3\").css({'width':cfg.image.width3,'height':cfg.image.height3});\n    this.container.find(\".img4\").css({'width':cfg.image.width4,'height':cfg.image.height4});\n    //字体颜色设置\n    this.container.css({\n      // 'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/templete/menu.js\"], function (module, exports, require, load, process, global) {var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  //var Chart = require('XXX');\n  var m = require('/templete/menu.js');\n\n  /**\n                                         * 马良基础类\n                                         */\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container); //容器\n    this.apis = config.apis; //hook一定要有\n    this._data = null; //数据\n    this.chart = null; //图表\n    this.init(config);\n  }, {\n    /**\n        * 公有初始化\n        */\n    init: function (config) {\n      //1.初始化,合并配置\n      this.mergeConfig(config);\n      //2.刷新布局,针对有子组件的组件 可有可无\n      this.updateLayout();\n      //3.子组件实例化\n      //this.chart = new Chart(this.container[0], this.config);\n      //4.如果有需要, 更新样式\n      this.updateStyle();\n    },\n    /**\n        * 绘制\n        * @param data\n        * @param options 不一定有\n        * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n        */\n    render: function (data, config) {\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n      //更新图表\n      //this.chart.render(data, cfg);\n      // this.container.html(data[0].value)\n\n      this.container.html(m.m1(data));\n\n\n      this.container.find(\".second_f\").hide();\n      this.container.find(\".third_f\").hide();\n      this.container.find(\".fourth_f\").hide();\n      this.container.find(\".line\").show();\n      //一级点击,二级展开和收起\n      this.container.find(\".first_f\").on('click', ev => {\n        var e = ev || event;\n\n        this.container.find(\".second_f\").hide(300);\n        this.container.find(\".third_f\").hide();\n        this.container.find(\".fourth_f\").hide();\n        this.container.find(\".line\").show();\n\n        var val = $(e.currentTarget.parentElement).attr(\"value\");\n        if (val == 0) {\n          $(e.currentTarget.parentElement).children(\".second_f\").show(300);\n          this.container.find(\".menu_item\").attr(\"value\", 0);\n          this.container.find(\".second_f_item\").attr(\"value\", 0);\n          this.container.find(\".third_f_item\").attr(\"value\", 0);\n\n          // console.log(config);\n\n          this.container.find(\".first_f\").css(\"color\", this.config.color);\n\n          $(e.currentTarget.parentElement).attr(\"value\", 1);\n          $(e.currentTarget).css(\"color\", \"rgba(8,182,253)\");\n        } else {\n          $(e.currentTarget.parentElement).children(\".second_f\").hide(300);\n          $(e.currentTarget.parentElement).attr(\"value\", 0);\n          this.container.find(\".first_f\").css(\"color\", this.config.color);\n          $(\".second_f_item\").css(\"background\", \"none\");\n          $(\".third_f_item\").css(\"background\", \"rgba(255,255,255,.1)\");\n        }\n      });\n      //二级点击，三级展开\n      this.container.find(\".second_f_item\").on('click', ev => {\n        var e = ev || event;\n        var val = $(e.currentTarget).attr(\"value\");\n        if (val == 0) {\n          this.container.find(\".third_f\").hide();\n          this.container.find(\".fourth_f\").hide();\n          this.container.find(\".second_f_item\").attr(\"value\", 0);\n          this.container.find(\".third_f_item\").attr(\"value\", 0);\n          $(e.currentTarget.lastChild).show(300);\n          $(e.currentTarget).attr(\"value\", 1);\n\n          $(\".second_f_item\").css(\"background\", \"none\");\n          $(e.currentTarget).css(\"background\", \"rgba(8,182,253,.3)\");\n        }\n\n\n      });\n      //三级点击，四级展开\n      this.container.find(\".third_f_item\").on('click', ev => {\n        var e = ev || event;\n        var val = $(e.currentTarget).attr(\"value\");\n        if (val == 0) {\n          this.container.find(\".fourth_f\").hide();\n          this.container.find(\".third_f_item\").attr(\"value\", 0);\n          $(e.currentTarget).children(\".fourth_f\").show(300);\n          $(e.currentTarget).attr(\"value\", 1);\n\n          $(\".third_f_item\").css(\"background\", \"rgba(255,255,255,.1)\");\n          $(e.currentTarget).css(\"background\", \"rgba(8,182,253,.3)\");\n        }\n      });\n\n      this.container.find(\".sendBtn\").on('click', ev => {\n        var e = ev || event;\n        e.stopPropagation();\n        var key = $(e.currentTarget).attr(\"key\");\n        // var length1=$(e.currentTarget.parentElement).children(\".second_f\").length;\n\n        // var length2=$(e.currentTarget.parentElement).children(\".third_f\").length;\n\n        // var length3=$(e.currentTarget.parentElement).children(\".fourth_f\").length;\n\n        var data = {\n          id: key };\n\n        this.emit('sendId', data);\n\n      });\n\n\n      //如果有需要的话,更新样式\n      this.updateStyle();\n    },\n    /**\n        *\n        * @param width\n        * @param height\n        */\n    resize: function (width, height) {\n      this.updateLayout(width, height);\n      //更新图表\n      //this.chart.render({\n      //  width: width,\n      //  height: height\n      //})\n    },\n    /**\n        * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n        * 暂时可以不填内容\n        */\n    setColors: function () {\n      //比如\n      // var cfg = this.config;\n      // cfg.color = cfg.theme.series[0] || cfg.color;\n    },\n    /**\n        * 数据,设置和获取数据\n        * @param data\n        * @returns {*|number}\n        */\n    data: function (data) {\n      if (data) {\n        this._data = data;\n      }\n      return this._data;\n    },\n    /**\n        * 更新配置\n        * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n        * [注] 有数组的配置一定要替换\n        * @param config\n        * @private\n        */\n    mergeConfig: function (config) {\n      if (!config) {return this.config;}\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n    /**\n        * 更新布局\n        * 可有可无\n        */\n    updateLayout: function () {},\n    /**\n                                   * 更新样式\n                                   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n                                   */\n    updateStyle: function () {\n      var cfg = this.config;\n\n      //标题字体大小设置\n      this.container.find(\".font1\").css(\"font-size\", cfg.title.size1);\n      this.container.find(\".font2\").css(\"font-size\", cfg.title.size2);\n      this.container.find(\".font3\").css(\"font-size\", cfg.title.size3);\n      this.container.find(\".font4\").css(\"font-size\", cfg.title.size4);\n\n      //图标大小设置\n      this.container.find(\".img1\").css({ 'width': cfg.image.width1, 'height': cfg.image.height1 });\n      this.container.find(\".img2\").css({ 'width': cfg.image.width2, 'height': cfg.image.height2 });\n      this.container.find(\".img3\").css({ 'width': cfg.image.width3, 'height': cfg.image.height3 });\n      this.container.find(\".img4\").css({ 'width': cfg.image.width4, 'height': cfg.image.height4 });\n      //字体颜色设置\n      this.container.css({\n        // 'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n    /**\n        * 更新配置\n        * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n        */\n    //updateOptions: function (options) {},\n    /**\n     * 更新某些配置\n     * 给可以增量更新配置的组件用\n     */\n    //updateXXX: function () {},\n    /**\n     * 销毁组件\n     */\n    destroy: function () {console.log('请实现 destroy 方法');} });return module.exports;});","sourceMap":null,"modifyTime":1536030075000,"mime":"application/javascript","wrap":true,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/templete/menu.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/templete/menu.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":20,"end":33,"loc":{"start":{"line":1,"column":20},"end":{"line":1,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":52,"end":60,"loc":{"start":{"line":2,"column":16},"end":{"line":2,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":79,"end":87,"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":136,"end":156,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":36}},"extra":{"rawValue":"./templete/menu.js","raw":"'./templete/menu.js'"},"value":"/templete/menu.js"}]}